{"version":3,"file":"static/js/607.22df7dbe.chunk.js","mappings":"wPAEaA,EAAOC,EAAAA,GAAAA,GAAH,iDACE,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MAGzBC,EAAOJ,EAAAA,GAAAA,KAAH,+HACD,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,MACtB,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,YAAYC,WACzB,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,YAAYC,YAC/B,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,OAAOC,aACT,SAAAX,GAAC,OAAIA,EAAEC,MAAMS,OAAOE,WAG7BC,EAAOd,EAAAA,GAAAA,EAAH,iEACD,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,MACtB,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,YAAYC,W,SCW1C,EAtBgB,WACd,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAMP,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,KAAKL,KAC5B,CAACC,KAGA,8BACGF,GAAW,wBACTA,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAAC3B,EAAD,YACE,UAACe,EAAD,YAAM,SAACV,EAAD,sBAAN,IAA4BqB,MAC5B,UAACX,EAAD,YAAM,SAACV,EAAD,sBAAN,IAA4BsB,OAFnBF,QAKN,gB,iOCpBTG,EAAW,+BACXC,EAAU,CACdC,OAAQ,CACNC,QAAS,qCAFb,SAMeC,EAAuB,GAAvBA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAsCC,GAAtC,8FAA2CC,EAA3C,+BAAqD,GAArD,kBAE+BC,IAAAA,IAAUF,EAAKC,GAF9C,uBAEgBE,EAFhB,EAEgBA,KAFhB,kBAGeA,GAHf,yDAKe,IAAIC,MAAJ,sCAAyC,KAAMC,WAL9D,iFASO,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACGC,EADH,UACqBZ,EADrB,gCAEuBI,EAAuBQ,EAAcX,GAF5D,uBAEKY,EAFL,EAEKA,QAFL,kBAGIA,GAHJ,kEAMA,SAASC,EAAkBvB,GAE9B,OAAOa,EADQ,UAAMJ,EAAN,kBAAwBT,GACEU,GAGtC,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,oFACGC,EADH,UAC4BjB,EAD5B,iBAEGkB,EAAgB,CAClBhB,OAAQ,CACJC,QAAS,mCACTa,MAAAA,IALL,SAQuBZ,EAAuBa,EAAqBC,GARnE,uBAQKL,EARL,EAQKA,QARL,kBASIA,GATJ,kEAYA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAyB5B,GAAzB,kFACG6B,EADH,UACiBpB,EADjB,kBACmCT,EADnC,qBAEoBa,EAAuBgB,EAAUnB,GAFrD,uBAEKoB,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,kEAMA,SAAe3B,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,kFACG+B,EADH,UACoBtB,EADpB,kBACsCT,EADtC,qBAEuBa,EAAuBkB,EAAarB,GAF3D,uBAEKY,EAFL,EAEKA,QAFL,kBAGIA,GAHJ,kEAMA,SAAeU,IAAtB,4CAAO,OAAP,oBAAO,+FACGC,EADH,UACmBxB,EADnB,8BAEoBI,EAAuBoB,EAAYvB,GAFvD,uBAEIwB,EAFJ,EAEIA,OAFJ,kBAGIA,GAHJ","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/API/MovieApiService.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Item = styled.li`\n  margin-bottom: ${p => p.theme.space[4]}px;\n`\n\nexport const Info = styled.span`\n  font-size:  ${p => p.theme.fontSizes.xs};\n  line-height: ${p => p.theme.lineHeights.heading};\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  color: ${p => p.theme.colors.secondary};\n  background-color: ${p => p.theme.colors.primary};\n`\n\nexport const Text = styled.p`\n  font-size:  ${p => p.theme.fontSizes.xs};\n  line-height: ${p => p.theme.lineHeights.heading};\n`","import { fetchReviews } from 'services/API/MovieApiService';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Info, Item, Text } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const {movieId} = useParams();\n  \n  useEffect(() => {\n    fetchReviews(movieId).then(setReviews);\n}, [movieId])\n\n  return (\n    <>\n      {reviews ? (<ul>\n        {reviews.map(({ id, author, content }) => (\n          <Item key={id}>\n            <Text><Info>Author:</Info> {author}</Text>\n            <Text><Info>Review:</Info> {content}</Text>\n          </Item>\n        ))}\n      </ul>) : '0 reviews'}\n    </>\n  );\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst OPTIONS = {\n  params: {\n    api_key: '470b53b8228b70c791d3c6418cea7265',\n  }\n}\n\nasync function fetchWithErrorHandling(url, options = {}) {\n    try {\n        const { data } = await axios.get(url, options);\n        return data;\n    } catch (error) {\n        return new Error(`Sorry something went wrong. ${error.message}`);\n    }\n}\n\nexport async function fetchTrendingMovies() {\n    const TRENDING_URL = `${BASE_URL}/trending/movie/day`;\n    const { results } = await fetchWithErrorHandling(TRENDING_URL, OPTIONS); \n    return results;\n}\n\nexport function fetchMovieDetails(movieId) {\n    const MOVIE_URL = `${BASE_URL}/movie/${movieId}`;\n    return fetchWithErrorHandling(MOVIE_URL, OPTIONS);\n}\n\nexport async function fetchSearchingMovie(query) {\n    const SEARCHING_MOVIE_URL = `${BASE_URL}/search/movie`;\n    const optionsSearch = {\n        params: {\n            api_key: '470b53b8228b70c791d3c6418cea7265',\n            query,\n        }\n    };\n    const { results } = await fetchWithErrorHandling(SEARCHING_MOVIE_URL, optionsSearch); \n    return results;\n}\n\nexport async function fetchCast(movieId) {\n    const CAST_URL = `${BASE_URL}/movie/${movieId}/credits`;\n    const { cast } = await fetchWithErrorHandling(CAST_URL, OPTIONS); \n    return cast;\n}\n\nexport async function fetchReviews(movieId) {\n    const REVIEWS_URL = `${BASE_URL}/movie/${movieId}/reviews`;\n    const { results } = await fetchWithErrorHandling(REVIEWS_URL, OPTIONS); \n    return results;\n}\n\nexport async function fetchGenresList() {\n    const GENRES_URL = `${BASE_URL}/genre/movie/list`;\n    const {genres} = await fetchWithErrorHandling(GENRES_URL, OPTIONS); \n    return genres;\n}"],"names":["Item","styled","p","theme","space","Info","fontSizes","xs","lineHeights","heading","fontWeights","semiBold","colors","secondary","primary","Text","useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviews","then","map","id","author","content","BASE_URL","OPTIONS","params","api_key","fetchWithErrorHandling","url","options","axios","data","Error","message","fetchTrendingMovies","TRENDING_URL","results","fetchMovieDetails","fetchSearchingMovie","query","SEARCHING_MOVIE_URL","optionsSearch","fetchCast","CAST_URL","cast","REVIEWS_URL","fetchGenresList","GENRES_URL","genres"],"sourceRoot":""}